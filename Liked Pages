LEVEL:-MEDIUM
COMPANY:-META
URL:-https://www.interviewquery.com/questions/liked-pages

Question:-
Let’s say we want to build a naive recommender. We’re given two tables, one table called friends with a user_id and friend_id columns 
representing each user’s friends, and another table called page_likes with a user_id and a page_id representing the page each user liked.

Write an SQL query to create a metric to recommend pages for each user based on recommendations from their friend’s liked pages. 

Note: It shouldn’t recommend pages that the user already likes.

Solution-1:- With SUB-QUERY
SELECT f1.user_id,
p1.page_id,
COUNT(*) AS num_friend_likes
FROM friends AS f1 INNER JOIN page_likes AS p1
ON p1.user_id=f1.friend_id
WHERE p1.page_id NOT IN (
    SELECT page_id
    FROM page_likes AS p2
    WHERE p2.user_id=f1.user_id
)
GROUP BY f1.user_id,p1.page_id

Solution-2:- WITH JOINWITH t1 AS (
    SELECT 
        f.user_id 
        , f.friend_id
        , pl.page_id 
    FROM friends AS f
    INNER JOIN page_likes AS pl
        ON f.friend_id = pl.user_id
)
SELECT t1.user_id, t1.page_id, COUNT(DISTINCT t1.friend_id) AS num_friend_likes
FROM t1
LEFT JOIN page_likes AS pl
    ON t1.page_id = pl.page_id 
        AND t1.user_id = pl.user_id
WHERE pl.user_id IS NULL # filter out existing user likes
GROUP BY 1, 2
